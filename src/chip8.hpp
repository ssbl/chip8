#ifndef CHIP8_HPP_INCLUDED
#define CHIP8_HPP_INCLUDED

#include <array>
#include <chrono>

enum class Color : unsigned int
{
  BLACK = 0xff000000,
  WHITE = 0xffffffff,
};

struct TimedRegister
{
  unsigned char value;
  std::chrono::time_point<std::chrono::high_resolution_clock> last_write;

  TimedRegister();
  void set(const unsigned char new_value);
  void decrement();
};

struct Chip8
{
  unsigned short opcode;
  std::array<unsigned char, 4096> memory;
  std::array<unsigned char, 16> V;
  unsigned short i;
  unsigned short pc;
  std::array<Color, 64 * 32> framebuffer;
  TimedRegister delay_timer;
  TimedRegister sound_timer;
  std::array<unsigned char, 16> key;
  std::array<unsigned short, 16> stack;
  unsigned short sp;

  bool draw_flag;
  bool halted;

  static constexpr std::array<unsigned char, 80> fontset = {
    0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
    0x20, 0x60, 0x20, 0x20, 0x70, // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
    0x90, 0x90, 0xF0, 0x10, 0x10, // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
    0xF0, 0x10, 0x20, 0x40, 0x40, // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
    0xF0, 0x90, 0xF0, 0x90, 0x90, // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
    0xF0, 0x80, 0x80, 0x80, 0xF0, // C
    0xE0, 0x90, 0x90, 0x90, 0xE0, // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
    0xF0, 0x80, 0xF0, 0x80, 0x80  // F
  };

  Chip8();
  bool load_rom(const char* path);
  void step();
  void clear_display();
};

#endif // CHIP8_HPP_INCLUDED
